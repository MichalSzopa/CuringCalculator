@page "/curings"

@using CuringCalculator.Data
@using CuringCalculator.Data.Models
@using CuringCalculator.Shared.Models

@inject LocalDbService localDbService

@* translations are going to be resolved later *@
<h1>Peklowania</h1>

@if (curings != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Metoda</th>
                <th>Początek</th>
                <th>Koniec</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var curing in curings)
            {
                <tr @onclick="() => curing.IsRowExpanded = !curing.IsRowExpanded">
                    <td>@curing.MethodName</td>
                    <td>@curing.StartDate.ToShortDateString()</td>
                    <td>@curing.EndDate.ToShortDateString()</td>
                </tr>
                @if (curing.IsRowExpanded)
                {
                    <tr>
                        <td colspan="3">
                            <div class="additional-data-container w-100">
                                <div class="additional-data-column">
                                    <span>Mięso: @curing.MeatAmount [kg] </span>
                                    <span>Sól: @curing.SaltAmount [g] </span>
                                </div>
                                <div class="additional-data-column">
                                    <span>Cukier: @curing.SugarAmount [g] </span>
                                    <span>Dni: @curing.Days </span>
                                </div>
                            </div>
                            <span style="display:block">Uwagi: @curing.Comments </span>
                            <button 
                                style="display:block" 
                                class="cancel-button"
                                @onclick="@(e => removeCuring(curing.Id))"
                            > Usuń </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    List<CuringForListModel> curings { get; set; }

    protected override async Task OnInitializedAsync()
    {
        curings = await localDbService.GetCuringsForList();
    }

    async Task removeCuring(int curingId)
    {
        await localDbService.RemoveCuring(curingId);
        curings = await localDbService.GetCuringsForList();
    }
}
